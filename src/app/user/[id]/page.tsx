"use client";

import { useEffect, useState } from "react";
import { useRouter, useParams } from "next/navigation";
import ImagePopup from "@/app/components/ImagePopup"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Popup component
import ReviewForm from "@/app/components/ReviewForm";


interface UserProfile {
  username: string;
  profile_picture: string;
  note: string;
  district: string;
  position: string;
  status: string;
}

interface Gallery {
  id: number;
  image: string;
}


interface Review {
  score: number;
  comment: string;
  reviewer_user: { username: string; profile_picture: string | null };
}

interface ReviewStats {
  averageScore: number;
  totalReviews: number;
}


export default function UserProfilePage() {
  const [profile, setProfile] = useState<UserProfile | null>(null);
  const [galleries, setGalleries] = useState<Gallery[]>([]);
  const [reviews, setReviews] = useState<Review[]>([]);
  const [reviewStats, setReviewStats] = useState<ReviewStats | null>(null);
  const [selectedImage, setSelectedImage] = useState<string | null>(null); // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Popup
  const [error, setError] = useState<string | null>(null);
  const router = useRouter();
  const params = useParams();
  const userId = Number(params.id) || 0;
  

  useEffect(() => {
    const fetchUserProfile = async () => {
      if (!userId) return;
      try {
        const res = await fetch(`/api/user/${userId}`);
        if (!res.ok) throw new Error("Failed to fetch user profile");
        const data = await res.json();

        setProfile(data.user);
        setGalleries(data.gallery || []);
        setReviews(data.reviews || []);
        setReviewStats(data.reviewStats || null);
      } catch (error: any) {
        console.error("Error fetching user profile:", error.message || error);
        setError("Failed to fetch user profile");
      }
    };

    fetchUserProfile();
  }, [userId]);


  const districtMap: Record<string, string> = {
    "MUEANG": "‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ",
    "SI_MUEANG_MAI": "‡∏®‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
    "KHONG_CHIAM": "‡πÇ‡∏Ç‡∏á‡πÄ‡∏à‡∏µ‡∏¢‡∏°",
    "KHUEANG_NAI": "‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô",
    "KHEMMARAT": "‡πÄ‡∏Ç‡∏°‡∏£‡∏≤‡∏ê",
    "DET": "‡πÄ‡∏î‡∏ä‡∏≠‡∏∏‡∏î‡∏°",
    "NA_CHALUAI": "‡∏ô‡∏≤‡∏à‡∏∞‡∏´‡∏•‡∏ß‡∏¢",
    "NAM_YUEN": "‡∏ô‡πâ‡∏≥‡∏¢‡∏∑‡∏ô",
    "BUNTHARIK": "‡∏ö‡∏∏‡∏ì‡∏ë‡∏£‡∏¥‡∏Å",
    "TRAKAN": "‡∏ï‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡∏ä‡∏ú‡∏•",
    "KUT_KHAOPUN": "‡∏Å‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏∏‡πâ‡∏ô",
    "MUANG_SAM_SIP": "‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≤‡∏°‡∏™‡∏¥‡∏ö",
    "WARIN": "‡∏ß‡∏≤‡∏£‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏≤‡∏ö",
    "PHIBUN": "‡∏û‡∏¥‡∏ö‡∏π‡∏•‡∏°‡∏±‡∏á‡∏™‡∏≤‡∏´‡∏≤‡∏£",
    "TAN_SUM": "‡∏ï‡∏≤‡∏•‡∏™‡∏∏‡∏°",
    "PHO_SAI": "‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÑ‡∏ó‡∏£",
    "SAMRONG": "‡∏™‡∏≥‡πÇ‡∏£‡∏á",
    "DON_MOT_DAENG": "‡∏î‡∏≠‡∏ô‡∏°‡∏î‡πÅ‡∏î‡∏á",
    "SIRINDHORN": "‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£",
    "THUNG_SI_UDOM": "‡∏ó‡∏∏‡πà‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏∏‡∏î‡∏°",
    "SI_LAK_CHAI": "‡∏®‡∏£‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡∏¢",
    "NAM_KHUN": "‡∏ô‡πâ‡∏≥‡∏Ç‡∏∏‡πà‡∏ô",
    "LAO_SUEA_KOK": "‡πÄ‡∏´‡∏•‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡πÇ‡∏Å‡πâ‡∏Å",
    "SAWANG_WIRAWONG": "‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏µ‡∏£‡∏∞‡∏ß‡∏á‡∏®‡πå",
  };

  const handleImageClick = (image: string) => {
    setSelectedImage(image); // ‡πÄ‡∏õ‡∏¥‡∏î Popup ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  };

  const handleClosePopup = () => {
    setSelectedImage(null); // ‡∏õ‡∏¥‡∏î Popup
  };

  if (error) {
    return <div className="text-red-500">{error}</div>;
  }

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center p-6 relative">

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
      <div className="bg-white p-6 rounded-lg shadow-lg max-w-md w-full text-center">
        <img
          src={profile?.profile_picture || "/default-profile.png"}
          alt="Profile Picture"
          className="w-32 h-32 rounded-full mx-auto mb-4 border-2 border-orange-400"
        />
        <h1 className="text-2xl font-bold">{profile?.username}</h1>
        <p className="text-gray-500 mt-2">
          ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: {districtMap[profile?.district ?? "NONE"] ?? "‡πÑ‡∏°‡πà‡∏°‡∏µ"}
        </p>
        <p className="text-gray-500">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {profile?.position || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
        <p className="text-gray-700 mt-4 italic">{profile?.note || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß"}</p>

        {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏° "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠" ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ */}
        <div className="mt-6 flex justify-center">
          <button
            onClick={() => router.push(`/user/${userId}/contact`)}  // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏° onClick
            className="bg-green-500 text-white py-2 px-4 text-sm rounded hover:bg-green-600 transition"
          >
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
          </button>
        </div>
      </div>

      {/* ‡∏≠‡∏±‡∏•‡∏ö‡∏±‡πâ‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
      <div className="bg-white p-4 rounded-lg shadow-lg max-w-md w-full mt-6">
        <h2 className="text-lg font-bold text-center mb-4">‡∏≠‡∏±‡∏•‡∏ö‡∏±‡πâ‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</h2>
        <div className="grid grid-cols-3 gap-4">
          {galleries.map((gallery, index) => (
            <div
              key={gallery.id}
              className="w-full h-32 bg-gray-200 rounded-lg overflow-hidden flex items-center justify-center relative cursor-pointer"
              onClick={() => handleImageClick(gallery.image)} // ‡πÄ‡∏õ‡∏¥‡∏î Popup
            >
              <img
                src={gallery.image}
                alt={`Gallery Image ${index}`}
                className="w-full h-full object-cover"
              />
            </div>
          ))}
        </div>
      </div>

      {/* ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô */}
      

      {/* Image Popup */}
      {selectedImage && (
        <ImagePopup image={selectedImage} onClose={handleClosePopup} />
      )}

{/* ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô */}
<div className="bg-white p-6 rounded-lg shadow-lg max-w-lg w-full mt-6 text-center"> 
  <h2 className="text-xl font-bold">‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô</h2> {/* ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ */}
  {reviewStats?.totalReviews ? (
    <p className="text-gray-500 mt-2 text-lg">
      ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: {reviewStats.averageScore} ‚≠ê ({reviewStats.totalReviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)
    </p>
  ) : (
    <p className="text-gray-500 mt-4 text-lg">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</p>
  )}

  {reviews.map((review, index) => (
    <div key={index} className="border p-4 mt-4 rounded w-full">
      <div className="flex items-center">
        <img
          src={review.reviewer_user.profile_picture || "/default-profile.png"}
          alt="Reviewer"
          className="w-10 h-10 rounded-full mr-3"
        />
        <strong className="text-lg">{review.reviewer_user.username}</strong>
      </div>
      <p className="text-yellow-500 text-lg mt-2">‚≠ê {review.score}</p>
      <p className="text-gray-700 text-base">{review.comment}</p>
    </div>
  ))}
</div>

{/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß */}
<div className="mt-8 w-full max-w-lg">
  <ReviewForm userId={userId} onReviewSubmit={() => window.location.reload()} />
</div>


    </div>
  );
}
