services:
  web:
    build: .
    ports:
      - "10345:10345"
    env_file:
      - .env
  
    depends_on:
      db:
        condition: service_healthy
    restart: always

    networks:
      - frontend
      - traefik-public
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s65114540345.rule=PathPrefix(`/s65114540345`)"
      - "traefik.http.services.s65114540345.loadbalancer.server.port=10345"
      - "traefik.docker.network=traefik-public"

  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ubonhooper || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    
    volumes:
      - db_data:/var/lib/postgresql/data
    
    networks:
      - frontend
    labels:
      - "traefik.enable=false"

  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker=true"
      - "--api.insecure=true"   # เปิด dashboard ที่ :8080
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - frontend


volumes:
  db_data:

networks:
  frontend:
    driver: bridge
  traefik-public:
    external: true
