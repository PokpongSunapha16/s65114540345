services:
  web:
    build: .
    ports:
      - "10345:10345"
    env_file:
      - .env
  
    depends_on:
      db:
        condition: service_healthy
    restart: always

    networks:
      - frontend

  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ubonhooper || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    
    volumes:
      - db_data:/var/lib/postgresql/data
    
    networks:
      - frontend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    networks:
      - frontend


volumes:
  db_data:

networks:
  frontend:
    driver: bridge
