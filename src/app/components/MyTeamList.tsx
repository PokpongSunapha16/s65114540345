import React, { useEffect, useState } from "react";

interface Team {
  id: number;
  name: string;
  member_count: number;
  type: "THREE_X_THREE" | "FIVE_X_FIVE";
  members: { userId: number }[]; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏°
}

interface MyTeamListProps {
  onClose: () => void;
  onSelectTeam: (teamId: number) => void;
  selectedPlayerId: number;
}

const MyTeamList: React.FC<MyTeamListProps> = ({ onClose, onSelectTeam, selectedPlayerId }) => {
  const [teams, setTeams] = useState<Team[]>([]);

  useEffect(() => {
    const fetchTeams = async () => {
      try {
        const response = await fetch("/api/myteams");
        if (!response.ok) throw new Error("Failed to fetch teams");

        const data = await response.json();
        setTeams(data.teams || []);
      } catch (error) {
        console.error("Error fetching teams:", error);
      }
    };

    fetchTeams();
  }, []);

  const handleInvite = async (team: Team) => {
    if (!selectedPlayerId) {
      console.error("‚ùå selectedPlayerId is missing!");
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç");
      return;
    }
  
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ `team.members` ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏õ‡πá‡∏ô `[]`
    const teamMembers = team.members ?? [];
  
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡∏°‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const maxMembers = team.type === "THREE_X_THREE" ? 3 : 5;
    if (team.member_count >= maxMembers) {
      alert(`‚ùå ‡∏ó‡∏µ‡∏° "${team.name}" ‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß!`);
      return;
    }
  
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isAlreadyInTeam = teamMembers.some((member) => member.userId === selectedPlayerId);
    if (isAlreadyInTeam) {
      alert(`‚ùå ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡∏° "${team.name}" ‡πÅ‡∏•‡πâ‡∏ß!`);
      return;
    }
  
    console.log("üìå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç:", { teamId: team.id, receiverId: selectedPlayerId });
  
    try {
      const response = await fetch("/api/invite", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ teamId: team.id, receiverId: selectedPlayerId }),
      });
  
      const result = await response.json();
  
      if (!response.ok) {
        throw new Error(result.error || "Failed to send invite");
      }
  
      alert("‚úÖ ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
      onClose();
    } catch (error) {
      console.error("‚ùå Error sending invite:", error);
      
      if (error instanceof Error) {
        alert(error.message);
      } else {
        alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç");
      }
    }
  };  
  

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
      <div className="bg-white w-80 rounded-lg shadow-lg p-4">
        <h2 className="text-lg font-bold mb-4">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ä‡∏¥‡∏ç</h2>
        <ul>
          {teams.map((team) => {
            const maxMembers = team.type === "THREE_X_THREE" ? 3 : 5;
            const isFull = team.member_count >= maxMembers;

            return (
              <li
                key={team.id}
                className={`p-2 rounded cursor-pointer ${
                  isFull ? "bg-gray-300 text-gray-500 cursor-not-allowed" : "hover:bg-gray-200"
                }`}
                onClick={() => !isFull && handleInvite(team)}
              >
                {team.name}
              </li>
            );
          })}
        </ul>
        <button onClick={onClose} className="mt-4 bg-red-500 text-white py-1 px-3 rounded">
          ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        </button>
      </div>
    </div>
  );
};

export default MyTeamList;
