"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import ImagePopup from "@/app/components/ImagePopup";

interface User {
  id: number;
  username: string;
  district: string;
  position: string;
  note: string | null;
  galleries: ImageData[];
}

interface ImageData {
  id: number;
  image: string;
}

// ‚úÖ Map ‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
const districtMap: Record<string, string> = {
  MUEANG: "‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ",
  SI_MUEANG_MAI: "‡∏®‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
  KHONG_CHIAM: "‡πÇ‡∏Ç‡∏á‡πÄ‡∏à‡∏µ‡∏¢‡∏°",
  KHUEANG_NAI: "‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô",
  KHEMMARAT: "‡πÄ‡∏Ç‡∏°‡∏£‡∏≤‡∏ê",
  DET: "‡πÄ‡∏î‡∏ä‡∏≠‡∏∏‡∏î‡∏°",
  NA_CHALUAI: "‡∏ô‡∏≤‡∏à‡∏∞‡∏´‡∏•‡∏ß‡∏¢",
  NAM_YUEN: "‡∏ô‡πâ‡∏≥‡∏¢‡∏∑‡∏ô",
  BUNTHARIK: "‡∏ö‡∏∏‡∏ì‡∏ë‡∏£‡∏¥‡∏Å",
  TRAKAN: "‡∏ï‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡∏ä‡∏ú‡∏•",
  KUT_KHAOPUN: "‡∏Å‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏∏‡πâ‡∏ô",
  MUANG_SAM_SIP: "‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≤‡∏°‡∏™‡∏¥‡∏ö",
  WARIN: "‡∏ß‡∏≤‡∏£‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏≤‡∏ö",
  PHIBUN: "‡∏û‡∏¥‡∏ö‡∏π‡∏•‡∏°‡∏±‡∏á‡∏™‡∏≤‡∏´‡∏≤‡∏£",
  TAN_SUM: "‡∏ï‡∏≤‡∏•‡∏™‡∏∏‡∏°",
  PHO_SAI: "‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÑ‡∏ó‡∏£",
  SAMRONG: "‡∏™‡∏≥‡πÇ‡∏£‡∏á",
  DON_MOT_DAENG: "‡∏î‡∏≠‡∏ô‡∏°‡∏î‡πÅ‡∏î‡∏á",
  SIRINDHORN: "‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£",
  THUNG_SI_UDOM: "‡∏ó‡∏∏‡πà‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏∏‡∏î‡∏°",
  SI_LAK_CHAI: "‡∏®‡∏£‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡∏¢",
  NAM_KHUN: "‡∏ô‡πâ‡∏≥‡∏Ç‡∏∏‡πà‡∏ô",
  LAO_SUEA_KOK: "‡πÄ‡∏´‡∏•‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡πÇ‡∏Å‡πâ‡∏Å",
  SAWANG_WIRAWONG: "‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏µ‡∏£‡∏∞‡∏ß‡∏á‡∏®‡πå",
};

export default function AdminUsers() {
  const [users, setUsers] = useState<User[]>([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [currentUserId, setCurrentUserId] = useState<number | null>(null); // State for logged-in admin user ID
  const router = useRouter();

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
  useEffect(() => {
    const token = document.cookie.split("; ").find(row => row.startsWith("token="))?.split("=")[1];
    if (token) {
      try {
        const decodedToken = JSON.parse(atob(token.split('.')[1])); // decode the JWT token
        setCurrentUserId(decodedToken.id); // Extract logged-in user's id
      } catch (err) {
        console.error("Invalid token:", err);
      }
    }
  }, []);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  useEffect(() => {
    async function fetchUsers() {
      try {
        const res = await fetch(`/api/admin/users?search=${searchQuery}`);
        if (!res.ok) throw new Error("Failed to fetch users with gallery");
        const data = await res.json();
        setUsers(data);
      } catch (err) {
        setError("Error loading users with gallery");
        console.error(err);
      }
    }
    fetchUsers();
  }, [searchQuery]);
  

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î Popup ‡∏î‡∏π‡∏£‡∏π‡∏õ
  const handleViewImage = (imageUrl: string) => {
    setSelectedImage(imageUrl);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Popup
  const handleClosePopup = () => {
    setSelectedImage(null);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const handleDeleteImage = async (imageId: number) => {
    if (!window.confirm("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) return;

    try {
      await fetch("/api/admin/users", {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ imageId }),
      });

      setUsers((prevUsers) =>
        prevUsers.map((user) => ({
          ...user,
          galleries: user.galleries.filter((img) => img.id !== imageId),
        }))
      );
    } catch (error) {
      console.error("‚ùå Error deleting image:", error);
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
  const handleDeleteUser = async (userId: number) => {

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (userId === currentUserId) {
      alert("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ");
      return;
    }

    if (!window.confirm("üö® ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ!")) return;

    try {
      const res = await fetch("/api/admin/users", {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ userId }), // ‡∏™‡πà‡∏á userId
      });

      if (!res.ok) {
        const errorData = await res.json();
        alert(errorData.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ");
        return;
      }

      setUsers((prevUsers) => prevUsers.filter((user) => user.id !== userId));
    } catch (error) {
      console.error("‚ùå Error deleting user:", error);
    }
  };
  

  return (
    <div className="p-6">
      <h1 className="text-2xl font-semibold">üë• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h1>

      <input
        type="text"
        placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å..."
        className="w-full p-2 border border-gray-400 rounded mt-4"
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
      />

      {error && <p className="text-red-500 mt-2">{error}</p>}

      {users.length === 0 ? (
        <p className="text-gray-500 mt-6">‚õî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</p>
      ) : (
        <ul className="mt-6 space-y-6">
          {users.map((user) => (
            <li key={user.id} className="border p-4 rounded-lg shadow-md">
              <h3 className="font-semibold text-lg">üë§ {user.username}</h3>
              <p className="text-sm text-gray-600">üìç ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: {districtMap[user.district] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
              <p className="text-sm text-gray-600">üèÄ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {user.position}</p>
              <p className="text-sm text-gray-500">{user.note ? `üìù Note: ${user.note}` : "‡πÑ‡∏°‡πà‡∏°‡∏µ Note"}</p>

              {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
              <div className="grid grid-cols-3 gap-4 mt-4">
                {user.galleries.length > 0 ? (
                  user.galleries.map((img) => (
                    <div key={img.id} className="border p-2 rounded-md">
                      <img
                        src={img.image}
                        alt="Gallery"
                        className="w-full h-40 object-cover rounded-md cursor-pointer"
                        onClick={() => handleViewImage(img.image)} // ‚úÖ ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î Popup
                      />
                      <button
                        onClick={() => handleDeleteImage(img.id)}
                        className="mt-2 bg-red-500 text-white px-2 py-1 rounded w-auto"
                      >
                        üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏π‡∏õ
                      </button>
                    </div>
                  ))
                ) : (
                  <p className="col-span-3 text-gray-500">üö´ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÅ‡∏Å‡∏•‡∏•‡∏≠‡∏£‡∏µ‡πà</p>
                )}
              </div>

              {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
              <div className="flex space-x-4 mt-4">
                <button
                  onClick={() => router.push(`/user/${user.id}`)}
                  className="bg-blue-500 text-white px-2 py-1 rounded w-auto"
                >
                  üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                </button>

                {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å */}
                {user.id !== currentUserId && (
                  <button
                    onClick={() => handleDeleteUser(user.id)}
                    className="bg-red-700 text-white px-2 py-1 rounded w-auto"
                  >
                    üö® ‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                  </button>
                )}
              </div>
            </li>
          ))}
        </ul>
      )}

      {/* Image Popup */}
      {selectedImage && <ImagePopup image={selectedImage} onClose={handleClosePopup} />}
    </div>
  );
}
