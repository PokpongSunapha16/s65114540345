"use client";

import { useState } from "react";
import { useRouter, useParams } from "next/navigation";
import { Dialog } from "@headlessui/react";

export default function LeaveTeamButton() {
  const router = useRouter();
  const { teamName } = useParams();
  const [showLeavePopup, setShowLeavePopup] = useState(false);
  const [isLeaving, setIsLeaving] = useState(false); // üîÑ ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥

  const handleLeaveTeam = async () => {
    if (isLeaving) return; // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ return ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    setIsLeaving(true);

    try {
      const response = await fetch(`/api/team_management/${encodeURIComponent(teamName as string)}/leave`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
      });

      if (!response.ok) throw new Error("Failed to leave team");

      setShowLeavePopup(false); // ‚úÖ ‡∏õ‡∏¥‡∏î Popup ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°
      router.push("/team_management"); // ‚úÖ Redirect ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    } catch (error) {
      console.error("Error leaving team:", error);
    } finally {
      setIsLeaving(false); // ‚úÖ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error
    }
  };

  return (
    <>
      <button
        onClick={() => setShowLeavePopup(true)}
        className="absolute top-4 right-4 bg-red-500 hover:bg-red-700 text-white p-2 rounded-full shadow-md"
        disabled={isLeaving} // ‚ùå ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°
      >
        ‚ùå ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°
      </button>

      {/* Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏° */}
      <Dialog open={showLeavePopup} onClose={() => setShowLeavePopup(false)} className="relative z-50">
        <div className="fixed inset-0 bg-black/30 flex items-center justify-center p-4">
          <Dialog.Panel className="w-full max-w-md bg-white p-6 rounded-lg shadow-lg">
            <Dialog.Title className="text-xl font-bold">‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°?</Dialog.Title>
            <Dialog.Description className="mt-2 text-gray-700">
              ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏° ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
            </Dialog.Description>
            <div className="mt-4 flex justify-end space-x-2">
              <button
                onClick={() => setShowLeavePopup(false)}
                className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400"
                disabled={isLeaving}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button
                onClick={handleLeaveTeam}
                className={`px-4 py-2 text-white rounded ${isLeaving ? "bg-gray-500" : "bg-red-600 hover:bg-red-800"}`}
                disabled={isLeaving} // ‚ùå ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°
              >
                {isLeaving ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å..." : "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô"}
              </button>
            </div>
          </Dialog.Panel>
        </div>
      </Dialog>
    </>
  );
}
