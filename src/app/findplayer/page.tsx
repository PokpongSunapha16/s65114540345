"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import FindPlayerPopup from "../components/FindPlayerPopup"; 
import MyTeamList from "../components/MyTeamList"; // ‚úÖ Import MyTeamList


interface Player {
  id: number;
  username: string;
  profile_picture: string | null;
  district: string;
  position: string;
  status: string;
}

const FindPlayerPage = () => {
  const router = useRouter();
  const [players, setPlayers] = useState<Player[]>([]);
  const [selectedDistrict, setSelectedDistrict] = useState<string>(""); // ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const [searchQuery, setSearchQuery] = useState<string>(""); // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  const [noResults, setNoResults] = useState<boolean>(false);
  const [isPopupOpen, setIsPopupOpen] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û
  const [isMyTeamListOpen, setIsMyTeamListOpen] = useState(false); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° state
  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null); // ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

  const fetchPlayers = async (district: string, query: string) => {
    try {
      console.log("Fetching with:", {
        district,
        query,
        userId: 1,
      }); // Log ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ

      const response = await fetch(
        `/api/findplayer?district=${district}&query=${query}&userId=1`
      );

      if (!response.ok) {
        throw new Error(`Error: ${response.statusText}`);
      }

      const data = await response.json();
      console.log("Response from API:", data); // Log ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å API
      setPlayers(data.players || []);
      setNoResults(data.players.length === 0);
    } catch (error) {
      console.error("Failed to fetch players:", error);
      setPlayers([]);
      setNoResults(true);
    }
  };

  const handleSearch = () => {
    if (searchQuery.trim() === "") {
      setPlayers([]);
      setNoResults(false);
      return;
    }
    fetchPlayers(selectedDistrict, searchQuery);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      handleSearch();
    }
  };

  const districtMap: Record<string, string> = {
    "MUEANG": "‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ",
    "SI_MUEANG_MAI": "‡∏®‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
    "KHONG_CHIAM": "‡πÇ‡∏Ç‡∏á‡πÄ‡∏à‡∏µ‡∏¢‡∏°",
    "KHUEANG_NAI": "‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô",
    "KHEMMARAT": "‡πÄ‡∏Ç‡∏°‡∏£‡∏≤‡∏ê",
    "DET": "‡πÄ‡∏î‡∏ä‡∏≠‡∏∏‡∏î‡∏°",
    "NA_CHALUAI": "‡∏ô‡∏≤‡∏à‡∏∞‡∏´‡∏•‡∏ß‡∏¢",
    "NAM_YUEN": "‡∏ô‡πâ‡∏≥‡∏¢‡∏∑‡∏ô",
    "BUNTHARIK": "‡∏ö‡∏∏‡∏ì‡∏ë‡∏£‡∏¥‡∏Å",
    "TRAKAN": "‡∏ï‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡∏ä‡∏ú‡∏•",
    "KUT_KHAOPUN": "‡∏Å‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏∏‡πâ‡∏ô",
    "MUANG_SAM_SIP": "‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≤‡∏°‡∏™‡∏¥‡∏ö",
    "WARIN": "‡∏ß‡∏≤‡∏£‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏≤‡∏ö",
    "PHIBUN": "‡∏û‡∏¥‡∏ö‡∏π‡∏•‡∏°‡∏±‡∏á‡∏™‡∏≤‡∏´‡∏≤‡∏£",
    "TAN_SUM": "‡∏ï‡∏≤‡∏•‡∏™‡∏∏‡∏°",
    "PHO_SAI": "‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÑ‡∏ó‡∏£",
    "SAMRONG": "‡∏™‡∏≥‡πÇ‡∏£‡∏á",
    "DON_MOT_DAENG": "‡∏î‡∏≠‡∏ô‡∏°‡∏î‡πÅ‡∏î‡∏á",
    "SIRINDHORN": "‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£",
    "THUNG_SI_UDOM": "‡∏ó‡∏∏‡πà‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏∏‡∏î‡∏°",
    "SI_LAK_CHAI": "‡∏®‡∏£‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡∏¢",
    "NAM_KHUN": "‡∏ô‡πâ‡∏≥‡∏Ç‡∏∏‡πà‡∏ô",
    "LAO_SUEA_KOK": "‡πÄ‡∏´‡∏•‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡πÇ‡∏Å‡πâ‡∏Å",
    "SAWANG_WIRAWONG": "‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏µ‡∏£‡∏∞‡∏ß‡∏á‡∏®‡πå",
  };

  const handleDistrictChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const district = e.target.value;
    setSelectedDistrict(district);

    if (district === "") {
      setPlayers([]);
      setNoResults(false);
    } else {
      fetchPlayers(district, "");
    }
  };

  const handleOpenPopup = (player: Player) => {
    setSelectedPlayer(player);
    setIsPopupOpen(true);
  };

  const handleClosePopup = () => {
    setIsPopupOpen(false);
    setSelectedPlayer(null);
  };

  const handleOpenMyTeamList = () => {
    setIsPopupOpen(false); // ‚úÖ ‡∏õ‡∏¥‡∏î FindPlayerPopup
    setIsMyTeamListOpen(true); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î MyTeamList Popup
  };

  const handleCloseMyTeamList = () => {
    setIsMyTeamListOpen(false); // ‚úÖ ‡∏õ‡∏¥‡∏î MyTeamList Popup
  };

  const handleViewProfile = (playerId: number) => {
    router.push(`/user/${playerId}`); // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
  };

  const handleInvitePlayer = async () => {
    if (!selectedPlayer) return;

    try {
      const response = await fetch(`/api/invite`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ playerId: selectedPlayer.id }),
      });

      if (!response.ok) {
        throw new Error("Failed to send invite");
      }

      const data = await response.json();
      alert(`Invitation sent to ${selectedPlayer.username}`);
    } catch (error) {
      console.error("Error sending invite:", error);
      alert("Failed to send invitation. Please try again later.");
    } finally {
      handleClosePopup();
    }
  };

  return (
    <div className="relative p-6 min-h-screen bg-gray-50">

      <h1 className="text-2xl font-bold text-center mb-6">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô</h1>

      <div className="flex justify-between items-center bg-black py-2 px-4 rounded-lg shadow-md mb-6 w-2/3 mx-auto">
      <select
          value={selectedDistrict}
          onChange={handleDistrictChange}
          className="px-2 py-1 text-black border border-gray-300 rounded-md focus:ring focus:ring-orange-300 bg-white w-1/5"
        >
          <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</option>
          <option value="MUEANG">‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ</option>
          <option value="SI_MUEANG_MAI">‡∏®‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</option>
          <option value="KHONG_CHIAM">‡πÇ‡∏Ç‡∏á‡πÄ‡∏à‡∏µ‡∏¢‡∏°</option>
          <option value="KHUEANG_NAI">‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô</option>
          <option value="KHEMMARAT">‡πÄ‡∏Ç‡∏°‡∏£‡∏≤‡∏ê</option>
          <option value="DET">‡πÄ‡∏î‡∏ä‡∏≠‡∏∏‡∏î‡∏°</option>
          <option value="NA_CHALUAI">‡∏ô‡∏≤‡∏à‡∏∞‡∏´‡∏•‡∏ß‡∏¢</option>
          <option value="NAM_YUEN">‡∏ô‡πâ‡∏≥‡∏¢‡∏∑‡∏ô</option>
          <option value="BUNTHARIK">‡∏ö‡∏∏‡∏ì‡∏ë‡∏£‡∏¥‡∏Å</option>
          <option value="TRAKAN">‡∏ï‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡∏ä‡∏ú‡∏•</option>
          <option value="KUT_KHAOPUN">‡∏Å‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏∏‡πâ‡∏ô</option>
          <option value="MUANG_SAM_SIP">‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≤‡∏°‡∏™‡∏¥‡∏ö</option>
          <option value="WARIN">‡∏ß‡∏≤‡∏£‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏≤‡∏ö</option>
          <option value="PHIBUN">‡∏û‡∏¥‡∏ö‡∏π‡∏•‡∏°‡∏±‡∏á‡∏™‡∏≤‡∏´‡∏≤‡∏£</option>
          <option value="TAN_SUM">‡∏ï‡∏≤‡∏•‡∏™‡∏∏‡∏°</option>
          <option value="PHO_SAI">‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÑ‡∏ó‡∏£</option>
          <option value="SAMRONG">‡∏™‡∏≥‡πÇ‡∏£‡∏á</option>
          <option value="DON_MOT_DAENG">‡∏î‡∏≠‡∏ô‡∏°‡∏î‡πÅ‡∏î‡∏á</option>
          <option value="SIRINDHORN">‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£</option>
          <option value="THUNG_SI_UDOM">‡∏ó‡∏∏‡πà‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏∏‡∏î‡∏°</option>
          <option value="SI_LAK_CHAI">‡∏®‡∏£‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡∏¢</option>
          <option value="NAM_KHUN">‡∏ô‡πâ‡∏≥‡∏Ç‡∏∏‡πà‡∏ô</option>
          <option value="LAO_SUEA_KOK">‡πÄ‡∏´‡∏•‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡πÇ‡∏Å‡πâ‡∏Å</option>
          <option value="SAWANG_WIRAWONG">‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏µ‡∏£‡∏∞‡∏ß‡∏á‡∏®‡πå</option>
        </select>

        <div className="relative w-3/4">
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            onKeyDown={handleKeyDown}
            className="px-2 py-1 w-full border border-gray-300 rounded-md focus:ring focus:ring-orange-300"
          />
          <button
            onClick={handleSearch}
            className="absolute right-2 top-1/2 transform -translate-y-1/2 text-white px-3 py-1 rounded-md hover:bg-orange-600"
          >
            üîç
          </button>
        </div>
      </div>

      <div className="flex justify-center items-center">
        {players.length > 0 ? (
          <div className="flex flex-col items-center w-2/3">
            {players.map((player) => (
              <div
                key={player.id}
                className="flex items-center p-4 border rounded-lg shadow-md bg-white w-full mb-4 cursor-pointer"
                onClick={() => handleOpenPopup(player)}
              >
                <img
                  src={player.profile_picture || "/default-profile.png"}
                  alt={player.username}
                  className="w-16 h-16 rounded-full mr-4"
                />
                <div className="flex-1">
                  <h2 className="font-bold text-lg">{player.username}</h2>
                  <p className="text-sm text-gray-500">‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: {districtMap[player.district]}</p>
                  <p className="text-sm text-gray-500">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {player.position}</p>
                </div>
                <span
                  className={`text-sm font-bold ${
                    player.status === "ACTIVE"
                      ? "text-green-500"
                      : player.status === "OFFLINE"
                      ? "text-gray-500"
                      : ""
                  }`}
                >
                  {player.status === "ACTIVE"
                    ? "‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå"
                    : player.status === "OFFLINE"
                    ? "‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå"
                    : ""}
                </span>
              </div>
            ))}
          </div>
        ) : (
          <div className="flex justify-center items-center">
            <p className="text-gray-500 text-lg font-bold">
              {noResults
                ? "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ô‡∏µ‡πâ"
                : "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"}
            </p>
          </div>
        )}
      </div>

      {/* ‚úÖ ‡∏™‡πà‡∏á playerId ‡πÑ‡∏õ‡∏ó‡∏µ‡πà FindPlayerPopup */}
      {isPopupOpen && selectedPlayer && (
        <FindPlayerPopup
          onClose={handleClosePopup}
          onViewProfile={() => handleViewProfile(selectedPlayer.id)}
          onInvitePlayer={handleOpenMyTeamList}
          playerId={selectedPlayer.id}
        />
      )}

      {isMyTeamListOpen && selectedPlayer && (
        <MyTeamList
        onClose={handleCloseMyTeamList} // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        onSelectTeam={handleInvitePlayer}
        selectedPlayerId={selectedPlayer.id}
        />
      )}
    </div>
  );
};

export default FindPlayerPage;
