"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";

const CreateTeamPage = () => {
  const router = useRouter();
  const [teamName, setTeamName] = useState("");
  const [privacy, setPrivacy] = useState("PUBLIC");
  const [teamType, setTeamType] = useState("THREE_X_THREE");
  const [startTime, setStartTime] = useState("");
  const [endTime, setEndTime] = useState("");
  const [district, setDistrict] = useState("NONE");
  const [court, setCourt] = useState("");
  const [teamLogo, setTeamLogo] = useState<string | null>(null);
  const [previewLogo, setPreviewLogo] = useState<string | null>(null);
  const [description, setDescription] = useState("");

  const formatTime = (time: string) => {
    const date = new Date(time);
    return date.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" });
  };

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      const file = event.target.files[0];
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => {
        setTeamLogo(reader.result as string);
        setPreviewLogo(reader.result as string);
      };
    }
  };

  const handleSubmit = async () => {
    const data = {
      name: teamName,
      privacy,
      type: teamType,
      start_at: startTime,
      end_at: endTime,
      district,
      court,
      team_logo: teamLogo,
      description,
    };
  

    const res = await fetch("/api/team_management/create", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    if (res.ok) {
      router.push("/team_management");
    } else {
      console.error("Failed to create team");
    }
  };

  return (
    <div className="p-6 min-h-screen bg-gray-50 flex flex-col items-center">
      <h1 className="text-2xl font-bold mb-6">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡∏°</h1>

      <div className="w-full max-w-lg bg-white p-6 rounded-lg shadow-md">
        <div className="flex flex-col items-center mb-4">
          <label htmlFor="team_logo" className="cursor-pointer">
            <div className="w-32 h-32 bg-gray-200 flex items-center justify-center rounded-lg overflow-hidden">
              {previewLogo ? (
                <img src={previewLogo} alt="Team Logo" className="w-full h-full object-cover" />
              ) : (
                <span className="text-gray-500">üì∑</span>
              )}
            </div>
          </label>
          <input type="file" id="team_logo" className="hidden" accept="image/*" onChange={handleFileChange} />
        </div>

        <input
          type="text"
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°"
          value={teamName}
          onChange={(e) => setTeamName(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        />

        <select
          value={privacy}
          onChange={(e) => setPrivacy(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        >
          <option value="PUBLIC">‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞</option>
          <option value="PRIVATE">‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</option>
        </select>

        <select
          value={teamType}
          onChange={(e) => setTeamType(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        >
          <option value="THREE_X_THREE">3X3</option>
          <option value="FIVE_X_FIVE">5X5</option>
        </select>

        <input
          type="datetime-local"
          value={startTime}
          onChange={(e) => setStartTime(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        />

        <input
          type="datetime-local"
          value={endTime}
          onChange={(e) => setEndTime(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        />

        <select
          value={district}
          onChange={(e) => setDistrict(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        >
          <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</option>
          <option value="MUEANG">‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ</option>
          <option value="SI_MUEANG_MAI">‡∏®‡∏£‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</option>
          <option value="KHONG_CHIAM">‡πÇ‡∏Ç‡∏á‡πÄ‡∏à‡∏µ‡∏¢‡∏°</option>
          <option value="KHUEANG_NAI">‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô</option>
          <option value="KHEMMARAT">‡πÄ‡∏Ç‡∏°‡∏£‡∏≤‡∏ê</option>
          <option value="DET">‡πÄ‡∏î‡∏ä‡∏≠‡∏∏‡∏î‡∏°</option>
          <option value="NA_CHALUAI">‡∏ô‡∏≤‡∏à‡∏∞‡∏´‡∏•‡∏ß‡∏¢</option>
          <option value="NAM_YUEN">‡∏ô‡πâ‡∏≥‡∏¢‡∏∑‡∏ô</option>
          <option value="BUNTHARIK">‡∏ö‡∏∏‡∏ì‡∏ë‡∏£‡∏¥‡∏Å</option>
          <option value="TRAKAN">‡∏ï‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡∏ä‡∏ú‡∏•</option>
          <option value="KUT_KHAOPUN">‡∏Å‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏∏‡πâ‡∏ô</option>
          <option value="MUANG_SAM_SIP">‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≤‡∏°‡∏™‡∏¥‡∏ö</option>
          <option value="WARIN">‡∏ß‡∏≤‡∏£‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏≤‡∏ö</option>
          <option value="PHIBUN">‡∏û‡∏¥‡∏ö‡∏π‡∏•‡∏°‡∏±‡∏á‡∏™‡∏≤‡∏´‡∏≤‡∏£</option>
          <option value="TAN_SUM">‡∏ï‡∏≤‡∏•‡∏™‡∏∏‡∏°</option>
          <option value="PHO_SAI">‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÑ‡∏ó‡∏£</option>
          <option value="SAMRONG">‡∏™‡∏≥‡πÇ‡∏£‡∏á</option>
          <option value="DON_MOT_DAENG">‡∏î‡∏≠‡∏ô‡∏°‡∏î‡πÅ‡∏î‡∏á</option>
          <option value="SIRINDHORN">‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£</option>
          <option value="THUNG_SI_UDOM">‡∏ó‡∏∏‡πà‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏∏‡∏î‡∏°</option>
          <option value="SI_LAK_CHAI">‡∏®‡∏£‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡∏¢</option>
          <option value="NAM_KHUN">‡∏ô‡πâ‡∏≥‡∏Ç‡∏∏‡πà‡∏ô</option>
          <option value="LAO_SUEA_KOK">‡πÄ‡∏´‡∏•‡πà‡∏≤‡πÄ‡∏™‡∏∑‡∏≠‡πÇ‡∏Å‡πâ‡∏Å</option>
          <option value="SAWANG_WIRAWONG">‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏µ‡∏£‡∏∞‡∏ß‡∏á‡∏®‡πå</option>
        </select>

        <input
          type="text"
          placeholder="‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏≤‡∏™‡πÄ‡∏Å‡∏ï‡∏ö‡∏≠‡∏•"
          value={court}
          onChange={(e) => setCourt(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        />

        <textarea
          placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡∏°"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          className="w-full border p-2 rounded mb-4"
        ></textarea>

        <button
          onClick={handleSubmit}
          className="w-full bg-green-500 text-white p-2 rounded hover:bg-green-600"
        >
          ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        </button>
      </div>
    </div>
  );
};

export default CreateTeamPage;
